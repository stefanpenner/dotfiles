let g:ackprg = 'ag %s -i --nocolor --nogroup --ignore ''.git'' --ignore ''.DS_Store'' --ignore ''node_modules'' --hidden -g ""'

set noswapfile
"common typos
iabbrev function function

nnoremap <leader><space> :noh<cr>
set t_Co=256
colorscheme solarized
colorscheme desert

let g:gitgutter_enabled = 0

if has("gui_running")
  set guioptions=egmrt
  set guioptions-=r
  set guioptions-=l
  au FocusLost * :wa
endif

let g:airline_theme='dark'

function! ToggleNuMode()
  if(&rnu == 1)
    set nu
  else
    set rnu
  endif
endfunction
nnoremap <leader>b :call ToggleNuMode()<CR>

function! StripWhitespace ()
    exec ':%s/ \+$//gc'
endfunction

map <leader>s :call StripWhitespace ()<CR>
map <leader>r :w \| ! ruby %

au BufReadPost * set relativenumber

au BufRead,BufNewFile *.coffee setfiletype javascript
au BufRead,BufNewFile *.handlebars setfiletype javascript
au BufRead,BufNewFile *.clj setfiletype lisp
au BufRead,BufNewFile Assetfile setfiletype ruby

set statusline=%f\ %m\ %r
" Save on Undo

set notimeout
set ttimeout
set timeoutlen=20
set clipboard=unnamed
" set winwidth=84
" " We have to have a winheight bigger than we want to set winminheight. But if
" " we set winheight to be huge before winminheight, the winminheight set will
" " fail.
" set winheight=50
" set winheight=999

if has("mouse")
  set mouse=a
endif

map <silent> <Leader>rt :!bundle list --paths \| xargs /usr/local/bin/ctags -R * <CR><CR>
let Tlist_Ctags_Cmd='/usr/local/bin/ctags'
let Tlist_WinWidth=50
map <leader>t :TlistOpen<cr>
let g:tagbar_type_javascript = {
    \ 'ctagsbin' : '/usr/local/bin/jsctags'
    \ }

nnoremap <leader>4 Orequire 'pry';binding.pry<esc>
" Run a given vim command on the results of fuzzy selecting from a given shell
" command. See usage below.
function! SelectaCommand(choice_command, selecta_args, vim_command)
  try
    silent let selection = system(a:choice_command . " | selecta " . a:selecta_args)
  catch /Vim:Interrupt/
    " Swallow the ^C so that the redraw below happens; otherwise there will be
    " leftovers from selecta on the screen
    redraw!
    return
  endtry
  redraw!
  exec a:vim_command . " " . selection
endfunction

" Find all files in all non-dot directories starting in the working directory.
" Fuzzy select one of those. Open the selected file with :e.
nnoremap <leader>f :call SelectaCommand('git ls-files', "", ":e")<cr>

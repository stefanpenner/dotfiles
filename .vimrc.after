color mustang
nnoremap <leader><space> :noh<cr>

function! ToggleNuMode()
  if(&rnu == 1)
    set nu
  else
    set rnu
  endif
endfunction
nnoremap <leader>b :call ToggleNuMode()<CR>

function! StripWhitespace ()
    exec ':%s/ \+$//gc'
endfunction

map <leader>s :call StripWhitespace ()<CR>

au BufReadPost * set relativenumber

au BufRead,BufNewFile *.coffee setfiletype javascript
au BufRead,BufNewFile *.handlebars setfiletype javascript

" Save on Undo
au FocusLost * :wa

set t_Co=256
set notimeout
set ttimeout
set timeoutlen=20
set clipboard=unnamed
set winwidth=84
" We have to have a winheight bigger than we want to set winminheight. But if
" we set winheight to be huge before winminheight, the winminheight set will
" fail.
set winheight=5
set winminheight=5
set winheight=999

if has("mouse")
  set mouse=a
endif

if &term =~ "xterm.*"
  let &t_ti = &t_ti . "\e[?2004h"
  let &t_te = "\e[?2004l" . &t_te
  function XTermPasteBegin(ret)
    set pastetoggle=<Esc>[201~
    set paste
    return a:ret
  endfunction
  map <expr> <Esc>[200~ XTermPasteBegin("i")
  imap <expr> <Esc>[200~ XTermPasteBegin("")
endif

map <silent> <Leader>rt :!bundle list --paths \| xargs /usr/local/bin/ctags -R * <CR><CR>
nnoremap <leader>4 Orequire 'pry';binding.pry<esc>
nnoremap <leader>5 Orequire 'ruby-debug';debugger<esc>
nnoremap <leader>6 <C-w>v<C-w>l:A<cr>
nnoremap <leader>7 Orequire 'ruby-prof';result = RubyProf.profile {}; printer = RubyProf::CallStackPrinter.new(result); printer.print(open('stack.html','w')) <esc>

nnoremap <leader>gg :CommandTFlush<cr>\|:CommandT<cr>
nnoremap <leader>gv :CommandTFlush<cr>\|:CommandT app/views<cr>
nnoremap <leader>gc :CommandTFlush<cr>\|:CommandT app/controllers<cr>
nnoremap <leader>gb :CommandTFlush<cr>\|:CommandT app/behaviours<cr>
nnoremap <leader>gd :CommandTFlush<cr>\|:CommandT app/decorators<cr>
nnoremap <leader>gm :CommandTFlush<cr>\|:CommandT app/models<cr>
nnoremap <leader>gl :CommandTFlush<cr>\|:CommandT lib<cr>
nnoremap <leader>ga :CommandTFlush<cr>\|:CommandT app/assets<cr>
nnoremap <leader>gp :CommandTFlush<cr>\|:CommandT app/presenters<cr>
nnoremap <leader>gP :CommandTFlush<cr>\|:CommandT public<cr>
nnoremap <leader>gr :topleft 100 :split config/routes.rb<cr>
nnoremap <leader>gG :topleft 100 :split Gemfile<cr>

